--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone 10 LP" LPM_SIZE=4 LPM_WIDTH=12 LPM_WIDTHS=2 data result sel
--VERSION_BEGIN 20.1 cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 24 
SUBDESIGN mux_aob
( 
	data[47..0]	:	input;
	result[11..0]	:	output;
	sel[1..0]	:	input;
) 
VARIABLE 
	result_node[11..0]	: WIRE;
	sel_node[1..0]	: WIRE;
	w_data513w[3..0]	: WIRE;
	w_data543w[3..0]	: WIRE;
	w_data568w[3..0]	: WIRE;
	w_data593w[3..0]	: WIRE;
	w_data618w[3..0]	: WIRE;
	w_data643w[3..0]	: WIRE;
	w_data668w[3..0]	: WIRE;
	w_data693w[3..0]	: WIRE;
	w_data718w[3..0]	: WIRE;
	w_data743w[3..0]	: WIRE;
	w_data768w[3..0]	: WIRE;
	w_data793w[3..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( (((w_data793w[1..1] & sel_node[0..0]) & (! (((w_data793w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data793w[2..2]))))) # ((((w_data793w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data793w[2..2]))) & (w_data793w[3..3] # (! sel_node[0..0])))), (((w_data768w[1..1] & sel_node[0..0]) & (! (((w_data768w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data768w[2..2]))))) # ((((w_data768w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data768w[2..2]))) & (w_data768w[3..3] # (! sel_node[0..0])))), (((w_data743w[1..1] & sel_node[0..0]) & (! (((w_data743w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data743w[2..2]))))) # ((((w_data743w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data743w[2..2]))) & (w_data743w[3..3] # (! sel_node[0..0])))), (((w_data718w[1..1] & sel_node[0..0]) & (! (((w_data718w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data718w[2..2]))))) # ((((w_data718w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data718w[2..2]))) & (w_data718w[3..3] # (! sel_node[0..0])))), (((w_data693w[1..1] & sel_node[0..0]) & (! (((w_data693w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data693w[2..2]))))) # ((((w_data693w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data693w[2..2]))) & (w_data693w[3..3] # (! sel_node[0..0])))), (((w_data668w[1..1] & sel_node[0..0]) & (! (((w_data668w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data668w[2..2]))))) # ((((w_data668w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data668w[2..2]))) & (w_data668w[3..3] # (! sel_node[0..0])))), (((w_data643w[1..1] & sel_node[0..0]) & (! (((w_data643w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data643w[2..2]))))) # ((((w_data643w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data643w[2..2]))) & (w_data643w[3..3] # (! sel_node[0..0])))), (((w_data618w[1..1] & sel_node[0..0]) & (! (((w_data618w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data618w[2..2]))))) # ((((w_data618w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data618w[2..2]))) & (w_data618w[3..3] # (! sel_node[0..0])))), (((w_data593w[1..1] & sel_node[0..0]) & (! (((w_data593w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data593w[2..2]))))) # ((((w_data593w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data593w[2..2]))) & (w_data593w[3..3] # (! sel_node[0..0])))), (((w_data568w[1..1] & sel_node[0..0]) & (! (((w_data568w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data568w[2..2]))))) # ((((w_data568w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data568w[2..2]))) & (w_data568w[3..3] # (! sel_node[0..0])))), (((w_data543w[1..1] & sel_node[0..0]) & (! (((w_data543w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data543w[2..2]))))) # ((((w_data543w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data543w[2..2]))) & (w_data543w[3..3] # (! sel_node[0..0])))), (((w_data513w[1..1] & sel_node[0..0]) & (! (((w_data513w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data513w[2..2]))))) # ((((w_data513w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data513w[2..2]))) & (w_data513w[3..3] # (! sel_node[0..0])))));
	sel_node[] = ( sel[1..0]);
	w_data513w[] = ( data[36..36], data[24..24], data[12..12], data[0..0]);
	w_data543w[] = ( data[37..37], data[25..25], data[13..13], data[1..1]);
	w_data568w[] = ( data[38..38], data[26..26], data[14..14], data[2..2]);
	w_data593w[] = ( data[39..39], data[27..27], data[15..15], data[3..3]);
	w_data618w[] = ( data[40..40], data[28..28], data[16..16], data[4..4]);
	w_data643w[] = ( data[41..41], data[29..29], data[17..17], data[5..5]);
	w_data668w[] = ( data[42..42], data[30..30], data[18..18], data[6..6]);
	w_data693w[] = ( data[43..43], data[31..31], data[19..19], data[7..7]);
	w_data718w[] = ( data[44..44], data[32..32], data[20..20], data[8..8]);
	w_data743w[] = ( data[45..45], data[33..33], data[21..21], data[9..9]);
	w_data768w[] = ( data[46..46], data[34..34], data[22..22], data[10..10]);
	w_data793w[] = ( data[47..47], data[35..35], data[23..23], data[11..11]);
END;
--VALID FILE
